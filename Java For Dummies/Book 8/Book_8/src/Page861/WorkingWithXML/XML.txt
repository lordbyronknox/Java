
XML
* A standardized way to create, store, exchange between different types of computer systems or programs.
* It uses tags (like HTML). Each tag is an element.
<?xml version='1.0'?>                   //Every xml file must start with a xml declaration. (doesn't need an end tag)
<Books>                                 //root element
    <Book>                                  //start tag (element)
        <Title>Java For Dummies</Title>         //everything between the start and end tag is the
        <Author>Lowe</Author>                   //element's content. (also elements). (can be text data, or more elements)
    </Book>                                 //end tag
</Books>                                //root element

* Two key differences between XML and HTML is that XML tags dont indicate the format of the data, (Bold etc)
  rather they are descriptive, eg. a tag for the title is <title>.
  HTML tags are set... <B> for Bold, <I> for Italic etc.  XML tags can be whatever you feel suits the situation.

* Attributes: You can use an attribute to store data, instead of a child element.
  An attribute is a name-value pair inside the start tag of an element.
  eg. <Book title="Java for Dummies"> 


USING A DTD
(Document Type Definition)
* Spells out the structure of the xml document: What elements can appear, what attributes they must have,
  what subelements an element must have (eg. movie, must have title and year), what the root element must be 
  named and how many elements it must have etc.
  [it is supposed to make it easier for the user to read the document, but it can also validate the document,
   eg. make sure it doesnt have a movie element with two title sub-elements].

* You can store a DTD in the XML document, but usually it is stored in a separate file
  so u can use it to govern the format of multiple MXL documents of the same type.
  To indicate the name of the file that contains the DTD you add <!DOCTYPE> to the XML document.
  eg.
    <!DOCTYPE Movies SYSTEM "movies.dtd">



[see movies.dtd.... explained below:]

<?xml version="1.0" encoding="UTF-8"?>
<!ELEMENT Movies (Movie*)>                  //Movies element, has 1 or more 'movie' elements' in it.
<!ELEMENT Movie (Title, Price)>             //Movie element, contains a 'title' element and 'price' element.
<!ATTLIST Movie year CDATA #REQUIRED>       //!ATTLIST tag says: the 'movie' element' has an attribute 
                                               called 'year', can be any kind of data (CDATA), and is REQUIRED.
<!ELEMENT Title (#PCDATA)>                  //title element consists of text data
<!ELEMENT Price (#PCDATA)>                  //title element consists of text data


Hereâ€™s an ATTLIST tag that specifies a list of possible values along with a default:
<!ATTLIST Movie genre (SciFi|Action|Comedy|Drama) Comedy>


PROCESSING XML 
To process a XML document in a java program use either:
* DOM: Document Object Model
  Read the entire XML document into memory, where it is stored as a collection of objects
  structures in as a tree.
  Then you can process the elements of the tree (called nodes).
  If you change any of the nodes you can write the document back to file.

OR

* SAX: Simple API for XML
  A read-only technique that lets you read the elements of an xml document from a file and
  react to them as they come.
  Does not require you to store an entire xml document in memory at once, so is often used
  for large xml documents.
